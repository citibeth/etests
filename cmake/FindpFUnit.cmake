# Input Variables
#    PFUNIT_ROOT
# Produces:
#    PFUNIT_LIBRARY
#    PFUNIT_INCLUDE_DIR


FIND_PATH(PFUNIT_INCLUDE_DIR driver.F90
	HINTS ${PFUNIT_ROOT}/include)

# Don't know why this doesn't work
#FIND_PATH(PFUNIT_MOD_DIR assert_mod.mod
#	HINTS ${PFUNIT_ROOT}/mod)
set(PFUNIT_MOD_DIR ${PFUNIT_INCLUDE_DIR}/../mod)

#pFUnitParser.py
FIND_PATH(PFUNIT_BIN_DIR pFUnitParser.py
	HINTS ${PFUNIT_ROOT}/bin)
#set(PFUNIT_BIN_DIR ${PFUNIT_INCLUDE_DIR}/../bin)

FIND_LIBRARY(PFUNIT_LIBRARY NAMES pfunit
	HINTS ${PFUNIT_ROOT}/lib)

IF (PFUNIT_INCLUDE_DIR AND PFUNIT_MOD_DIR AND PFUNIT_LIBRARY)
   SET(PFUNIT_FOUND TRUE)
ENDIF()

IF (PFUNIT_FOUND)
   IF (NOT PFUNIT_FIND_QUIETLY)
      MESSAGE(STATUS "Found  xxx PFUNIT_LIBRARY: ${PFUNIT_LIBRARY}")
      MESSAGE(STATUS "Found  xxx PFUNIT_INCLUDE_DIR: ${PFUNIT_INCLUDE_DIR}")
      MESSAGE(STATUS "Found  xxx PFUNIT_MOD_DIR: ${PFUNIT_MOD_DIR}")
      MESSAGE(STATUS "Found  xxx PFUNIT_BIN_DIR: ${PFUNIT_BIN_DIR}")
   ENDIF (NOT PFUNIT_FIND_QUIETLY)
ELSE (PFUNIT_FOUND)
   IF (PFUNIT_FIND_REQUIRED)
      MESSAGE(FATAL_ERROR "Could not find PFUNIT")
   ENDIF (PFUNIT_FIND_REQUIRED)
ENDIF (PFUNIT_FOUND)
