@test
subroutine test_remap1d()
    use pfunit_mod
    use remap1d_mod
    use iso_fortran_env, only : REAL64
implicit none
    real(real64), dimension(:), allocatable, target :: dzA
    real(real64), dimension(:), allocatable, target :: dzB


    integer, dimension(:,:), allocatable :: overlap_ix
    real(real64), dimension(:), allocatable :: overlap_val
    integer :: n

    integer ::i
    real(real64) :: xsum

!    dzA = (/ 0.1d0,.5d0,1.2d0,1.2d0,2.d0,3d0,3.4d0,4.2d0 /)
!    dzB = (/ 0d0,.05d0,.06d0,1d0,2d0,3d0, 4.1d0 /)

    dzA = (/ .4d0, .7d0, 0d0, .8d0, 1d0, .4d0, .8d0 /)
    dzB = (/ .05d0, .01d0, .94d0, 1d0, 1d0, 1.1d0 /)

    call overlap1d(dzA, dzB, overlap_ix, overlap_val, n)

    xsum = 0d0
    do i=1,n
        print *,overlap_ix(:,i), overlap_val(i)
        xsum = xsum + overlap_val(i)
    end do
    print *,'sum',sum(dzA),sum(dzB),xsum
end subroutine test_remap1d


